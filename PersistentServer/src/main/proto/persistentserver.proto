syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.via.sep3.persistentserver.proto";
option csharp_namespace = "PersistentServerClient";
option java_outer_classname = "PersistentServerProto";
option objc_class_prefix = "PSP";

package persistentserver;

service PersistentServer{
  rpc GetClientById(ClientBasicDTO) returns (Client){}
  rpc CreateClient(ClientCreationDTO) returns (Client){}
  rpc GetClients(Empty) returns (GrpcClients){}

  rpc GetClientByUsername(ClientUsernameDTO) returns (Client){}
  rpc GetClientByIdentityDocument(ClientIdentityDocumentDTO) returns (Client){}

  rpc DeleteClient(ClientBasicDTO) returns(GrpcResult){}
  rpc UpdateClient(ClientUpdateDTO) returns(Client){}

  rpc GetAccountById(AccountBasicDTO) returns (GrpcAccount){}
  rpc GetClientAccounts(ClientBasicDTO) returns (GrpcAccounts){}
  rpc CreateAccount(AccountCreationDTO) returns (GrpcAccount){}
  rpc UpdateAccount(AccountUpdateDTO) returns(GrpcAccount){}
  rpc DeleteAccount(AccountBasicDTO) returns (GrpcResult){}
  
  rpc GetAdministratorByID(AdministratorBasicDTO) returns (GrpcAdministrator){}
  rpc AuthenticateAdministrator(GrpcAuthenticateAdministrator) returns (GrpcAdministrator){}

  rpc GetMoneyTransferById(MoneyTransferBasicDTO) returns (GrpcMoneyTransfer){}
  rpc GetMoneyTransfers(AccountBasicDTO) returns (GrpcMoneyTransfers){}
  rpc MakeMoneyTransfer(CreateMoneyTransferDTO) returns (GrpcMoneyTransfer){}
}
message Empty{

}
message GrpcResult{
  bool success = 1;
}
message ClientIdentityDocumentDTO{
  string identityDocument = 1;
}
message ClientUsernameDTO{
  string username = 1;
}

message AdministratorUsernameDTO{
  string username = 1;
}

message ClientBasicDTO{
  int64 clientId = 1;
}
message ClientCreationDTO{
  string userName = 1;
  string firstName = 2;
  string lastName = 3;
  string password = 4;
  string country = 5;
  string identityDocument = 6;
  string birthday = 7;
  string planType = 8;
}
message ClientUpdateDTO{
  string userName = 1;
  string firstName = 2;
  string lastName = 3;
  string password = 4;
  string country = 5;
  string identityDocument = 6;
  string birthday = 7;
  string planType = 8;
  int64 clientId = 9;
}
message Client{
  int64 clientId = 1;
  string userName = 2;
  string firstName = 3;
  string lastName = 4;
  string password = 5;
  string country = 6;
  string identityDocument = 7;
  string birthday = 8;
  string planType = 9;
}

message GrpcAdministrator{
  int64 administratorId = 1;
  string username = 2;
  string password = 3;
}

message GrpcClients{
  repeated Client clients = 1;
}

message AccountBasicDTO{
  int64 accountId = 1;
}

message GrpcAccount{
  int64 accountId = 1;
  string mainCurrency = 2;
  bool loan = 3;
  int64 clientId = 4;
  string name = 5;
  double euro = 6;
  double krone = 7;
  double pound = 8;

}
message GrpcAccounts{
  repeated GrpcAccount accounts = 1;
}
message AccountUpdateDTO{
  int64 accountId = 1;
  string mainCurrency = 2;
  bool loan = 3;
  int64 clientId = 4;
  string name = 5;
  double euro = 6;
  double krone = 7;
  double pound = 8;
}
message AccountCreationDTO{
  string mainCurrency = 1;
  int64 clientId = 2;
  string name = 3;
  bool loan = 4;
  double euro = 5;
  double krone = 6;
  double pound = 7;
}
message AdministratorBasicDTO{
  int64 administratorId = 1;
}

message GrpcAuthenticateAdministrator{
  int64 administratorId = 1;
  string username = 2;
}

message MoneyTransferBasicDTO{
  int64 moneyTransferId = 1;
}
message GrpcMoneyTransfer{
  int64 moneyTransferId = 1;
  int64 senderId = 2;
  int64 recipientId = 3;
  string senderCurrency = 4;
  double amount = 5;
}
message CreateMoneyTransferDTO{
  int64 senderId = 1;
  int64 recipientId = 2;
  string senderCurrency = 3;
  double amount = 4;
}
message GrpcMoneyTransfers{
  repeated GrpcMoneyTransfer moneyTransfers = 1;
}