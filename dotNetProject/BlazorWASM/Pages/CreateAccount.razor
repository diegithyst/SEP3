@page "/CreateAccount/{loan:bool}"
@using HttpClients.ClientInterfaces
@using Domain.DTOs
@inject IAccountService accountService
@inject NavigationManager nav;
<h3>Create New Account</h3>

        <label>Name of the account</label>
        <input @bind="name">
        <label>Currency:</label>
        <select @bind="mainCurrency">
        <option selected value="krone">Krone</option>
        <option value="pound">Pound</option>
        <option value="euro">Euro</option>
        </select>
    @if (loan)
    {
        <label>Value</label>
        <input @bind="value">
    }

<button @onclick="Create">Create!</button>
@code {

    [CascadingParameter]
    private Task<AuthenticationState> AuthState { get; set; } = null!;
    [Parameter]
    public bool loan { get; set; }
    
    private string name = "";
    private string mainCurrency = "";
    private double value = 0;
    private long id;
    
    private string error;
    
    private async Task Create()
    {
        mainCurrency = mainCurrency.ToLower();
        Console.WriteLine(mainCurrency + loan + value + id + name);
        await accountService.CreateAsync(new AccountCreationDTO(mainCurrency, loan, value, id, name));
        nav.NavigateTo($"/Accounts/");
    }

    protected override async Task OnInitializedAsync()
    {
        value = 0;
        var user = (await AuthState).User;
        id = Int64.Parse(user.Claims.First(claim => claim.Type.Equals("Id")).Value);
    }
}