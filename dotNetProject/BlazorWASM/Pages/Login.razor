@page "/Login"
@using HttpClients.ClientInterfaces
@inject IAuthService authService
@inject NavigationManager nav
<h3>Login</h3>

<div class="card">
    <div class="form-group field">
        <label>User name:</label>
        <input type="text" @bind="username" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(error))
        {
            <label>@error</label>
        }
    </div>
    <div class="form-group field">
        <label>Password:</label>
        <input type="password" @bind="password" @bind:event="oninput" />
    </div>
    <div class="button-row">
        <button @onclick="LoginAsync" disabled="@(string.IsNullOrEmpty(username))" class="acceptbtn">Login</button>
    </div>
</div>

@code {
    private string username = "";
    private string password = "";
    private string error = "";

    private async Task LoginAsync()
    {
        try
        {
            await authService.LoginClientAsync(username, password);
            nav.NavigateTo("/");
        }
        catch (Exception e)
        {
            error = $"Error: {e.Message}";
        }
    }

}