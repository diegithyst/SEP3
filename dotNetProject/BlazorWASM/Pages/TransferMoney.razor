@page "/TransferMoney"
@using HttpClients.ClientInterfaces
@using Domain.DTOs
@inject IMoneyTransferService mtService
<h3>TransferMoney</h3>

<div class="card">
    <div class="form-group field">
        <label>Account Sender Number:</label>
        <input type="text" @bind="_accountNrSender" @bind:event="oninput" />
        @if (!string.IsNullOrEmpty(error))
        {
            <label>@error</label>
        }
    </div>
    <div class="form-group field">
        <label>Account Receiver Number:</label>
        <input type="text" @bind="_accountNrReceiver" @bind:event="oninput" />
        @if (!string.IsNullOrEmpty(error))
        {
            <label>@error</label>
        }
    </div>
    <div class="form-group field">
        <label>Currency:</label>
        <input type="text" @bind="_currency" @bind:event="oninput" />
        @if (!string.IsNullOrEmpty(error))
        {
            <label>@error</label>
        }
    </div>
    <div class="form-group field">
        <label>Value:</label>
        <input type="text" @bind="_value" @bind:event="oninput" />
        @if (!string.IsNullOrEmpty(error))
        {
            <label>@error</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="TransferMoni" disabled="@(disableState)" class="acceptbtn">Send</button>
    </div>
</div>

@code {
    private string _accountNrSender = "";
    public string accountNrSender{get{ return _accountNrSender; }
        set
        {
            _accountNrSender = value;
            checkFields();
        } }
    private string _accountNrReceiver = "";
    public string accountNrReceiver{get{ return _accountNrReceiver; }
        set
        {
            _accountNrReceiver = value;
            checkFields();
        }
    }
    private string _currency = "";
    public string currency{get{ return _currency; }
        set
        {
            _currency = value;
            checkFields();
        }
    }
    private string _value = "";
    public string value{get{ return _value; }
        set
        {
            _value = value;
            checkFields();
        }
    }
    private string error = "";
    private bool disableState = true;

    protected void checkFields()
    {
        disableState = _accountNrSender?.Length == 0 || _accountNrReceiver?.Length == 0 || _currency?.Length == 0 || _value?.Length == 0;
    }

    protected async Task TransferMoni()
    {
        error = "";
        try
        {
            await mtService.CreateAsync(new MoneyTransferCreationDto(long.Parse(_accountNrSender), long.Parse(_accountNrReceiver), _currency, double.Parse(_value)));
        }
        catch (Exception e)
        {
            error = $"Error: {e.Message}";
        }
    }
  
}