@page "/AdminMainPage"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@inject IClientService ClientSquared
@inject NavigationManager nvgMg
@attribute [Authorize("MustBeAdministrator")]

<AuthorizeView>
@if (Clients != null)
{
    <table class="table" style="overflow:hidden; overflow-y:scroll">
        <thead>
        <tr>
            <th>Client Id</th>
            <th>Client Firstname</th>
            <th>Client Lastname</th>
            <th>Client Identity Document</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Clients)
        {
            <tr  @onclick="@(() => nvgMg.NavigateTo($"/ClientAdminPage/{item.id}"))">
                <td>@item.id</td>
                <td>@item.firstname</td>
                <td>@item.lastname</td>
                <td>@item.identityDocument</td>
            </tr>
        }
        </tbody>
    </table>
}

@if (Clients == null)
{
    <p>nothing here</p>
}
</AuthorizeView>

@code {
    private IEnumerable<ClientUpdateDTO> Clients;
    string loggedAdmin = "";
    private long id;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Clients = await ClientSquared.GetAsync();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
        
    }
    
}