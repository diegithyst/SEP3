// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: persistentserver.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace PersistentServerClient {
  public static partial class PersistentServer
  {
    static readonly string __ServiceName = "persistentserver.PersistentServer";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PersistentServerClient.ClientBasicDTO> __Marshaller_persistentserver_ClientBasicDTO = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PersistentServerClient.ClientBasicDTO.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PersistentServerClient.TotalBalance> __Marshaller_persistentserver_TotalBalance = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PersistentServerClient.TotalBalance.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PersistentServerClient.Client> __Marshaller_persistentserver_Client = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PersistentServerClient.Client.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PersistentServerClient.AccountBasicDTO> __Marshaller_persistentserver_AccountBasicDTO = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PersistentServerClient.AccountBasicDTO.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PersistentServerClient.GrpcAccount> __Marshaller_persistentserver_GrpcAccount = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PersistentServerClient.GrpcAccount.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PersistentServerClient.GrpcAccounts> __Marshaller_persistentserver_GrpcAccounts = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PersistentServerClient.GrpcAccounts.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PersistentServerClient.CurrencyBasicDTO> __Marshaller_persistentserver_CurrencyBasicDTO = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PersistentServerClient.CurrencyBasicDTO.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PersistentServerClient.GrpcCurrency> __Marshaller_persistentserver_GrpcCurrency = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PersistentServerClient.GrpcCurrency.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::PersistentServerClient.GrpcCurrencies> __Marshaller_persistentserver_GrpcCurrencies = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::PersistentServerClient.GrpcCurrencies.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::PersistentServerClient.ClientBasicDTO, global::PersistentServerClient.TotalBalance> __Method_GetTotalBalance = new grpc::Method<global::PersistentServerClient.ClientBasicDTO, global::PersistentServerClient.TotalBalance>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTotalBalance",
        __Marshaller_persistentserver_ClientBasicDTO,
        __Marshaller_persistentserver_TotalBalance);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::PersistentServerClient.ClientBasicDTO, global::PersistentServerClient.Client> __Method_GetClientById = new grpc::Method<global::PersistentServerClient.ClientBasicDTO, global::PersistentServerClient.Client>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetClientById",
        __Marshaller_persistentserver_ClientBasicDTO,
        __Marshaller_persistentserver_Client);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::PersistentServerClient.AccountBasicDTO, global::PersistentServerClient.GrpcAccount> __Method_GetAccountById = new grpc::Method<global::PersistentServerClient.AccountBasicDTO, global::PersistentServerClient.GrpcAccount>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccountById",
        __Marshaller_persistentserver_AccountBasicDTO,
        __Marshaller_persistentserver_GrpcAccount);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::PersistentServerClient.ClientBasicDTO, global::PersistentServerClient.GrpcAccounts> __Method_GetClientAccounts = new grpc::Method<global::PersistentServerClient.ClientBasicDTO, global::PersistentServerClient.GrpcAccounts>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetClientAccounts",
        __Marshaller_persistentserver_ClientBasicDTO,
        __Marshaller_persistentserver_GrpcAccounts);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::PersistentServerClient.CurrencyBasicDTO, global::PersistentServerClient.GrpcCurrency> __Method_GetCurrencyById = new grpc::Method<global::PersistentServerClient.CurrencyBasicDTO, global::PersistentServerClient.GrpcCurrency>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCurrencyById",
        __Marshaller_persistentserver_CurrencyBasicDTO,
        __Marshaller_persistentserver_GrpcCurrency);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::PersistentServerClient.AccountBasicDTO, global::PersistentServerClient.GrpcCurrencies> __Method_GetCurrencies = new grpc::Method<global::PersistentServerClient.AccountBasicDTO, global::PersistentServerClient.GrpcCurrencies>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCurrencies",
        __Marshaller_persistentserver_AccountBasicDTO,
        __Marshaller_persistentserver_GrpcCurrencies);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::PersistentServerClient.PersistentserverReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for PersistentServer</summary>
    public partial class PersistentServerClient : grpc::ClientBase<PersistentServerClient>
    {
      /// <summary>Creates a new client for PersistentServer</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public PersistentServerClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PersistentServer that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public PersistentServerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected PersistentServerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected PersistentServerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::PersistentServerClient.TotalBalance GetTotalBalance(global::PersistentServerClient.ClientBasicDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTotalBalance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::PersistentServerClient.TotalBalance GetTotalBalance(global::PersistentServerClient.ClientBasicDTO request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTotalBalance, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::PersistentServerClient.TotalBalance> GetTotalBalanceAsync(global::PersistentServerClient.ClientBasicDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTotalBalanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::PersistentServerClient.TotalBalance> GetTotalBalanceAsync(global::PersistentServerClient.ClientBasicDTO request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTotalBalance, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::PersistentServerClient.Client GetClientById(global::PersistentServerClient.ClientBasicDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::PersistentServerClient.Client GetClientById(global::PersistentServerClient.ClientBasicDTO request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetClientById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::PersistentServerClient.Client> GetClientByIdAsync(global::PersistentServerClient.ClientBasicDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::PersistentServerClient.Client> GetClientByIdAsync(global::PersistentServerClient.ClientBasicDTO request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetClientById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::PersistentServerClient.GrpcAccount GetAccountById(global::PersistentServerClient.AccountBasicDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::PersistentServerClient.GrpcAccount GetAccountById(global::PersistentServerClient.AccountBasicDTO request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccountById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::PersistentServerClient.GrpcAccount> GetAccountByIdAsync(global::PersistentServerClient.AccountBasicDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::PersistentServerClient.GrpcAccount> GetAccountByIdAsync(global::PersistentServerClient.AccountBasicDTO request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccountById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::PersistentServerClient.GrpcAccounts GetClientAccounts(global::PersistentServerClient.ClientBasicDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::PersistentServerClient.GrpcAccounts GetClientAccounts(global::PersistentServerClient.ClientBasicDTO request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetClientAccounts, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::PersistentServerClient.GrpcAccounts> GetClientAccountsAsync(global::PersistentServerClient.ClientBasicDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::PersistentServerClient.GrpcAccounts> GetClientAccountsAsync(global::PersistentServerClient.ClientBasicDTO request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetClientAccounts, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::PersistentServerClient.GrpcCurrency GetCurrencyById(global::PersistentServerClient.CurrencyBasicDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCurrencyById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::PersistentServerClient.GrpcCurrency GetCurrencyById(global::PersistentServerClient.CurrencyBasicDTO request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCurrencyById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::PersistentServerClient.GrpcCurrency> GetCurrencyByIdAsync(global::PersistentServerClient.CurrencyBasicDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCurrencyByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::PersistentServerClient.GrpcCurrency> GetCurrencyByIdAsync(global::PersistentServerClient.CurrencyBasicDTO request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCurrencyById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::PersistentServerClient.GrpcCurrencies GetCurrencies(global::PersistentServerClient.AccountBasicDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCurrencies(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::PersistentServerClient.GrpcCurrencies GetCurrencies(global::PersistentServerClient.AccountBasicDTO request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCurrencies, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::PersistentServerClient.GrpcCurrencies> GetCurrenciesAsync(global::PersistentServerClient.AccountBasicDTO request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCurrenciesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::PersistentServerClient.GrpcCurrencies> GetCurrenciesAsync(global::PersistentServerClient.AccountBasicDTO request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCurrencies, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override PersistentServerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PersistentServerClient(configuration);
      }
    }

  }
}
#endregion
